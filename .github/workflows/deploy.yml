name: CICD deploy to server

on:
  push:
    branches: [ dev ]
jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 16
      - name: Setup env from env_example
        run: echo "${{ secrets.ENV_TEST}}" > .env && sudo mkdir /logs
      - name: Run test
        run: npm i && npm test
  
  
  
  build-and-deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 16
      - name: Install dependency and build code with babel 
        run: npm i && npm run build
      - name: Prepare all other files to build folder
        run: cp package.json dist/ && cp run-container.sh dist/
      - name: Setup file .env from secret
        run: echo "${{ secrets.ENV_DEV}}" > dist/.env
      - name: Rsync to remote server dist code
        uses: burnett01/rsync-deployments@5.1
        with:
          switches: -avzr --delete --exclude="node_modules"
          path: dist/
          remote_path: ${{ secrets.DEPLOY_DEV_PATH }}
          remote_host: ${{ secrets.DEPLOY_DEV_HOST }}
          remote_port: ${{ secrets.DEPLOY_DEV_PORT }}
          remote_user: ${{ secrets.DEPLOY_DEV_USER }}
          remote_key: ${{ secrets.SSH_DEV_PRIVATE_KEY }}
      - name: Restart docker no.0
        uses: garygrossgarten/github-action-ssh@release
        with:
          command: docker restart ${{ secrets.DEV_CONTAINER_NAME }}-0
          port: ${{secrets.DEPLOY_DEV_PORT}}
          host: ${{secrets.DEPLOY_DEV_HOST}}
          username: ${{ secrets.DEPLOY_DEV_USER }}
          privateKey: ${{ secrets.SSH_DEV_PRIVATE_KEY }}
      - name: Sleep for 45 seconds
        run: sleep 45s
        shell: bash
      - name: Restart docker no.1
        uses: garygrossgarten/github-action-ssh@release
        with:
          command: docker restart ${{ secrets.DEV_CONTAINER_NAME }}-1
          port: ${{secrets.DEPLOY_DEV_PORT}}
          host: ${{secrets.DEPLOY_DEV_HOST}}
          username: ${{ secrets.DEPLOY_DEV_USER }}
          privateKey: ${{ secrets.SSH_DEV_PRIVATE_KEY }}
